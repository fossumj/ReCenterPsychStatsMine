)
paired_V2 <- paired_V2 %>% dplyr::mutate(PhysID = row_number())
#restructuring data to the long form
df_longV2 <- data.table::melt(data.table::setDT(paired_V2), id.vars=c("PhysID"), measure.vars=list(c("Verbal_BL", "Verbal_WH")))
df_longV2 <- rename(df_longV2, PatientRace = variable, Verbal = value)
df_longV2$PtRace <- plyr::mapvalues(df_longV2$PatientRace, from = c("Verbal_BL", "Verbal_WH"), to = c("Black", "White"))
rstatix::t_test(df_longV2, Verbal ~ PtRace, paired=TRUE, detailed=TRUE)
rstatix::cohens_d(df_longV2, Verbal ~ PtRace, paired=TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
library(tidyverse)
set.seed(210731)
#sample size, M and SD for each cell; this will put it in a long file
Negative<-round(c(rnorm(17,mean=1.91,sd=0.73),rnorm(18,mean=3.16,sd=0.19),rnorm(19, mean=3.3, sd=1.05), rnorm(20, mean=3.00, sd=1.07), rnorm(18, mean=2.64, sd=0.95), rnorm(19, mean=2.99, sd=0.80)),3)
#sample size, M and SD for each cell; this will put it in a long file
Positive<-round(c(rnorm(17,mean=4.99,sd=1.38),rnorm(18,mean=3.83,sd=1.13),rnorm(19, mean=4.2, sd=0.82), rnorm(20, mean=4.19, sd=0.91), rnorm(18, mean=4.17, sd=0.60), rnorm(19, mean=3.26, sd=0.94)),3)
ID <- factor(seq(1,111))
Rater <- c(rep("Dayaknese",35), rep("Madurese", 39), rep ("Javanese", 37))
Photo <- c(rep("Dayaknese", 17), rep("Madurese", 18), rep("Dayaknese", 19), rep("Madurese", 20), rep("Dayaknese", 18), rep("Madurese", 19))
#groups the 3 variables into a single df: ID#, DV, condition
Ramdhani_df<- data.frame(ID, Negative, Positive, Rater, Photo)
Ramdhani_df[,'Rater'] <- as.factor(Ramdhani_df[,'Rater'])
Ramdhani_df[,'Photo'] <- as.factor(Ramdhani_df[,'Photo'])
contrasts(Ramdhani_df$Rater)
# tell R which groups to compare
c1 <- c(1, -2, 1)
c2 <- c(-1, 0, 1)
mat <- cbind(c1,c2) #combine the above bits
contrasts(Ramdhani_df$Rater) <- mat # attach the contrasts to the variable
contrasts (Ramdhani_df$Rater)
#subset data
Dayaknese_Ph <- subset(Ramdhani_df, Photo == "Dayaknese")
View(Dayaknese_Ph)
Dykn_simple <- aov(Negative ~ Rater, data = Dayaknese_Ph)
summary(Dykn_simple)
#effect size for simple main effect can add "type = 1,2,3,4" to correspond with the ANOVA that was run
lsr::etaSquared(Dykn_simple, anova = FALSE )
summary.aov(Dykn_simple, split=list(Rater=list("Javanese v Dayaknese and Madurese"=1, "Dayaknese Madurese" = 2)))
#subset data
Madurese_Ph <- subset(Ramdhani_df, Photo == "Madurese")
#change df to subset, new model name
Mdrs_simple <- aov(Negative ~ Rater, data = Madurese_Ph)
#output for simple main effect
summary(Mdrs_simple)
#effect size for simple main effect can add "type = 1,2,3,4" to correspond with the ANOVA that was run
lsr::etaSquared(Mdrs_simple, anova = FALSE )
summary.aov(Mdrs_simple, split=list(Rater=list("Javanese v Dayaknese and Madurese"=1, "Dayaknese Madurese" = 2)))
.05/4
ggpubr::ggboxplot(Ramdhani_df, x = "Photo", y = "Negative", color = "Rater",xlab = "Rater Ethnicity Represented within Photo Stimulus", ylab = "Negative Reaction", add = "jitter", title = "Figure 1. Simple Main Effect of Rater within Photo Stimulus", ylim = c(1, 7))
Dayaknese_Ph <- subset(Ramdhani_df, Photo == "Dayaknese")
Madurese_Ph <- subset(Ramdhani_df, Photo == "Madurese")
View(Dayaknese_Ph)
contrasts(Dayaknese_Ph$Rater)<-contr.poly(3)
poly_Dy<-aov(Negative ~ Rater, data = Dayaknese_Ph)
summary.lm(poly_Dy)
contrasts(Madurese_Ph$Rater)<-contr.poly(3)
poly_Md<-aov(Negative ~ Rater, data = Madurese_Ph)
summary.lm(poly_Md)
ggpubr::ggboxplot(Ramdhani_df, x = "Photo", y = "Negative", color = "Rater",xlab = "Rater Ethnicity Represented within Photo Stimulus", ylab = "Negative Reaction", add = "jitter", title = "Figure 1. Simple Main Effect of Rater within Photo Stimulus", ylim = c(1, 7))
6*(6-1)/2
TwoWay_neg<-aov(Negative~Rater*Photo, Ramdhani_df)
summary(TwoWay_neg)
posthocs <- TukeyHSD(TwoWay_neg, ordered = TRUE)
posthocs
.05/15
.05/14
str(posthocs)
write.csv(posthocs$'Rater:Photo', 'posthocsOUT.csv')
.05/7
TwoWay_neg<-aov(Negative~Rater*Photo, Ramdhani_df)
summary(TwoWay_neg)
posthocs <- TukeyHSD(TwoWay_neg, ordered = TRUE)
posthocs
str(posthocs)
write.csv(posthocs$'Rater:Photo', 'posthocsOUT.csv')
set.seed(2022)
#gives me 8 numbers, assigning each number 3 consecutive spots, in sequence
ID<-factor(c(rep(seq(1,8),each=3)))
#gives me a column of 24 numbers with the specified Ms and SD
Resilience<-rnorm(24,mean=c(5.7,6.21,6.26),sd=c(.88,.79,.37))
#repeats pre, post, follow-up once each, 8 times
Wave<-rep(c("Pre","Post", "FollowUp"),each=1,8)
Amodeo_long<-data.frame(ID, Wave, Resilience)
Amodeo_long$Wave <- factor(Amodeo_long$Wave, levels = c("Pre", "Post", "FollowUp"))
# Create a new df (Amodeo_wide)
# Identify the original df
# We are telling it to connect the values of the Resilience variable its respective Wave designation
Amodeo_wide <- reshape2::dcast(data = Amodeo_long, formula =ID~Wave, value.var = "Resilience")
#doublecheck to see if they did what you think
str(Amodeo_wide)
Amodeo_wide$ID <- factor(Amodeo_wide$ID)
View(Amodeo_long)
View(Amodeo_wide)
#library(car)
waveLevels <- c(1,2,3)
waveFactor <- as.factor(waveLevels)
waveFrame <- data.frame(waveFactor)
waveBind <-cbind(Amodeo_wide$Pre, Amodeo_wide$Post, Amodeo_wide$FollowUp)
waveModel<- lm(waveBind~1)
waveModel
analysis <-car::Anova(waveModel, idata=waveFrame, idesign=~waveFactor)
summary(analysis)
set.seed(2022)
#gives me 8 numbers, assigning each number 3 consecutive spots, in sequence
ID<-factor(c(rep(seq(1,8),each=3)))
#gives me a column of 24 numbers with the specified Ms and SD
Resilience<-rnorm(24,mean=c(5.7,6.21,6.26),sd=c(.88,.79,.37))
#repeats pre, post, follow-up once each, 8 times
Wave<-rep(c("Pre","Post", "FollowUp"),each=1,8)
Amodeo_long<-data.frame(ID, Wave, Resilience)
Amodeo_long$Wave <- factor(Amodeo_long$Wave, levels = c("Pre", "Post", "FollowUp"))
# Create a new df (Amodeo_wide)
# Identify the original df
# We are telling it to connect the values of the Resilience variable its respective Wave designation
Amodeo_wide <- reshape2::dcast(data = Amodeo_long, formula =ID~Wave, value.var = "Resilience")
#doublecheck to see if they did what you think
str(Amodeo_wide)
Amodeo_wide$ID <- factor(Amodeo_wide$ID)
#library(car)
waveLevels <- c(1,2,3)
waveFactor <- as.factor(waveLevels)
waveFrame <- data.frame(waveFactor)
waveBind <-cbind(Amodeo_wide$Pre, Amodeo_wide$Post, Amodeo_wide$FollowUp)
waveModel<- lm(waveBind~1)
waveModel
analysis <-car::Anova(waveModel, idata=waveFrame, idesign=~waveFactor)
summary(analysis)
2023 - 1966
#install.packages("tidyverse")
#install.packages("ggpubr")
#install.packages("psych")
set.seed(2023)
# sample size, M and SD for each group
Accurate <- c(rnorm(30, mean = 1.18, sd = 0.8), rnorm(30, mean = 1.83,
sd = 0.58), rnorm(30, mean = 1.76, sd = 0.56))
# set upper bound for DV
Accurate[Accurate > 3] <- 3
# set lower bound for DV
Accurate[Accurate < 0] <- 0
# IDs for participants
ID <- factor(seq(1, 90))
# name factors and identify how many in each group; should be in same
# order as first row of script
COND <- c(rep("High", 30), rep("Low", 30), rep("Control", 30))
# groups the 3 variables into a single df: ID, DV, condition
Acc_sim30B <- data.frame(ID, COND, Accurate)
write.table(Acc_sim30B, file = "to_CSVb.csv", sep = ",", col.names = TRUE,
row.names = FALSE)
saveRDS(Acc_sim30B, "to_RobjectB.rds")
from_rds <- readRDS("to_RobjectB.rds")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed
#if(!require(psych)){install.packages("psych")}
#if(!require(faux)){install.packages("faux")}
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(dplyr)){install.packages("dplyr")}
#if(!require(ggpubr)){install.packages("ggpubr")}
#if(!require(pwr)){install.packages("pwr")}
#if(!require(apaTables)){install.packages("apaTables")}
#if(!require(knitr)){install.packages("knitr")}
#if(!require(rstatix)){install.packages("rstatix")}
library(tidyverse)
#Setting the seed. If you choose this practice option, change the number below to something different.
set.seed(220817)
#These define the characteristics of the verbal variable. It is essential that the object names (e.g., A_mean) are not changed because they will be fed to the function in the faux package.
sub_n <- 33
A_mean <- 8.37
B_mean <- 8.41
A_sd <- 3.36
B_sd <- 3.21
AB_r <- 0.3
#the faux package can simulate a variety of data. This function within the faux package will use the objects above to simulate paired samples data
paired_V <- faux::rnorm_multi(
n = sub_n,
vars = 2,
r = AB_r,
mu = c(A_mean, B_mean),
sd = c(A_sd, B_sd),
varnames = c("Verbal_BL", "Verbal_WH")
)
paired_V <- paired_V %>% dplyr::mutate(PhysID = row_number())
#Here, I repeated the process for the nonverbal variable.
sub_n <- 33
A_mean <- 2.68
B_mean <- 2.93
A_sd <- .84
B_sd <- .77
AB_r <- 0.9
paired_NV <- faux::rnorm_multi(
n = sub_n,
vars = 2,
r = AB_r,
mu = c(A_mean, B_mean),
sd = c(A_sd, B_sd),
varnames = c("NVerb_BL", "NVerb_WH")
)
#This code produced an ID number for each physician
paired_NV <- paired_NV %>% dplyr::mutate(PhysID = row_number())
#This data joined the two sets of data.
#Note, I did not write any code that assumed tha the verbal and nonverbal data came from the same physician.  Full confession:  I'm not quite sure how to do that just yet.
dfPairedSamples <- dplyr::full_join(paired_V, paired_NV, by = c("PhysID"))
dfPairedSamples <- dfPairedSamples%>%dplyr::select(PhysID, everything())
str(dfPairedSamples)
#writing the simulated data as a .csv
#write.table(dfPairedSamples, file = "dfPairedSamples.csv", sep = ',', col.names=TRUE, row.names=FALSE)
#at this point you could clear your environment and then bring the data back in as a .csv
#reading the data back in as a .csv file
#dfPairedSamples<- read.csv ('dfPairedSamples.csv', header = TRUE)
#saveRDS(dfPairedSamples, 'dfPairedSamples.rds')
#dfPairedSamples <- readRDS('dfPairedSamples.rds')
ggpubr::ggpaired(dfPairedSamples, cond1 = "Verbal_BL", cond2 ="Verbal_WH", color = "condition",  line.color = "gray", palette =c("npg"), xlab = "Patient Race", ylab = "Verbal Communication Rating")
View(dfPairedSamples)
#Creating the Verbal_D variable within the dfPairedSamples df
#Doing the "math" that informs that variable
dfPairedSamples$Verbal_D <- (dfPairedSamples$Verbal_BL - dfPairedSamples$Verbal_WH)
#Displaying the first six rows of the df to show that the difference score now exists
head(dfPairedSamples)
psych::describe(dfPairedSamples$Verbal_D
psych::describe(dfPairedSamples$Verbal_D
psych::describe(dfPairedSamples$Verbal_D)
#Creating the Verbal_D variable within the dfPairedSamples df
#Doing the "math" that informs that variable
dfPairedSamples$Verbal_D <- (dfPairedSamples$Verbal_BL - dfPairedSamples$Verbal_WH)
#Displaying the first six rows of the df to show that the difference score now exists
head(dfPairedSamples)
psych::describe(dfPairedSamples$Verbal_D)
.08/(4.14/sqrt(33))
qt(.05/2, 32, lower.tail=TRUE)
qt(.05/2, 32, lower.tail=FALSE)
qt(.05/2, 32, lower.tail=TRUE)
qt(.05/2, 32, lower.tail=FALSE)
.08-(2.037*((4.14/(sqrt(33)))))
.08+(2.037*((4.14/sqrt(33))))
.08/4.14
0.111/(sqrt(33))
(33*(.08^2))/((33*(.08^2)) + ((33-1)*(4.14^2)))
(0.111^2)/((0.111^2)+(33-1))
ReCdf <- readRDS("ReC.rds")
JustANOVA <- subset(ReCdf, Course == "ANOVA")
library(tidyverse)
tiny1 <- JustANOVA %>%
dplyr::select (OvInstructor)
tiny1 <- na.omit(tiny1)
str(tiny1$OvInstructor)
pastecs::stat.desc(tiny1$OvInstructor, norm=TRUE)
options(scipen=999)
ReCdf <- readRDS("ReC.rds")
JustANOVA <- subset(ReCdf, Course == "ANOVA")
library(tidyverse)
tiny1 <- JustANOVA %>%
dplyr::select (OvInstructor)
JustANOVA <- subset(ReCdf, Course == "ANOVA")
library(tidyverse)
tiny1 <- JustANOVA %>%
dplyr::select (OvInstructor)
tiny1 <- na.omit(tiny1)
str(tiny1$OvInstructor)
pastecs::stat.desc(tiny1$OvInstructor, norm=TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#Note, this script results in a different simulation than is in the ReadySetR lesson
#sets a random seed so that we get the same results each time
set.seed(210820)
#sample size, M and SD for each group
Accurate <- c(rnorm(30, mean=1.18, sd=0.80), rnorm(30, mean=1.83, sd = 0.58), rnorm(30, mean = 1.76, sd = 0.56))
#set upper bound for DV
Accurate[Accurate>3]<-3
#set lower bound for DV
Accurate[Accurate<0]<-0
#sample size, M and SD for each group
moreTalk <- c(rnorm(30, mean=-.82, sd=0.91), rnorm(30, mean=-0.39, sd = 0.66), rnorm(30, mean = -0.04, sd = 0.71))
#set upper bound for DV
moreTalk[moreTalk>2]<- 2
#set lower bound for DV
moreTalk[moreTalk<-2]<- -2
#IDs for participants
ID<-factor(seq(1,90))
#name factors and identify how many in each group; should be in same order as first row of script
COND<-c(rep("High", 30), rep("Low", 30), rep("Control", 30))
#groups the 3 variables into a single df:  ID#, DV, condition
accSIM30 <-data.frame(ID, COND, Accurate, moreTalk)
View(accSIM30)
head(accSIM30)
str(accSIM30)
#convert variable to factor
accSIM30$COND <- factor(accSIM30$COND)
str(accSIM30)
#ordering the factor
accSIM30$COND <- factor(accSIM30$COND, levels = c("Control", "Low", "High"))
#another structure check
str(accSIM30)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(accSIM30, "accSIM.rds")
#bring back the simulated dat from an .rds file
acc_RDS <- readRDS("accSIM.rds")
#write the simulated data as a .csv
write.table(accSIM30, file="accSIM.csv", sep=",", col.names=TRUE, row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed  #easy plotting for simple ANOVA
#if(!require(knitr)){install.packages("knitr")} #not needed for conducting the statistics, but necessary for knitting the document (if desired)
#if(!require(tidyverse)){install.packages("tidyverse")} #a specific part of the tidyverse with useful tools for manipulating data
#if(!require(dplyr)){install.packages("dplyr")} #for descriptive statistics and writing them as csv files
#if(!require(psych)){install.packages("psych")} #a number of wrappers for ANOVA models; today for evaluating the Shapiro
#if(!require(ggpubr)){install.packages("ggpubr")} #the package we will use to create figures
#if(!require(rstatix)){install.packages("rstatix")} #the package we will use for the majority of the ANOVA computations
#if(!require(apaTAbles)){install.packages("apaTables")} #helps with formats like decimals and percentages for inline code
#if(!require(effectsize)){install.packages("effectsize")}
#if(!require(pwr)){install.packages("pwr")} #produces an APA style table for ANOVAs and other models
#if(!require(car)){install.packages("car")}#although we don't call this package directly, there are rstatix functions that are a wrapper for it and therefore it needs to be installed
#Note, this script results in a different simulation than is in the ReadySetR lesson
#sets a random seed so that we get the same results each time
set.seed(210820)
#sample size, M and SD for each group
Accurate <- c(rnorm(30, mean=1.18, sd=0.80), rnorm(30, mean=1.83, sd = 0.58), rnorm(30, mean = 1.76, sd = 0.56))
#set upper bound for DV
Accurate[Accurate>3]<-3
#set lower bound for DV
Accurate[Accurate<0]<-0
#sample size, M and SD for each group
moreTalk <- c(rnorm(30, mean=-.82, sd=0.91), rnorm(30, mean=-0.39, sd = 0.66), rnorm(30, mean = -0.04, sd = 0.71))
#set upper bound for DV
moreTalk[moreTalk>2]<- 2
#set lower bound for DV
moreTalk[moreTalk<-2]<- -2
#IDs for participants
ID<-factor(seq(1,90))
#name factors and identify how many in each group; should be in same order as first row of script
COND<-c(rep("High", 30), rep("Low", 30), rep("Control", 30))
#groups the 3 variables into a single df:  ID#, DV, condition
accSIM30 <-data.frame(ID, COND, Accurate, moreTalk)
head(accSIM30)
str(accSIM30)
#convert variable to factor
accSIM30$COND <- factor(accSIM30$COND)
str(accSIM30)
#ordering the factor
accSIM30$COND <- factor(accSIM30$COND, levels = c("Control", "Low", "High"))
#another structure check
str(accSIM30)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed  #easy plotting for simple ANOVA
#if(!require(knitr)){install.packages("knitr")} #not needed for conducting the statistics, but necessary for knitting the document (if desired)
#if(!require(tidyverse)){install.packages("tidyverse")} #a specific part of the tidyverse with useful tools for manipulating data
#if(!require(dplyr)){install.packages("dplyr")} #for descriptive statistics and writing them as csv files
#if(!require(psych)){install.packages("psych")} #a number of wrappers for ANOVA models; today for evaluating the Shapiro
#if(!require(ggpubr)){install.packages("ggpubr")} #the package we will use to create figures
#if(!require(rstatix)){install.packages("rstatix")} #the package we will use for the majority of the ANOVA computations
#if(!require(apaTAbles)){install.packages("apaTables")} #helps with formats like decimals and percentages for inline code
#if(!require(effectsize)){install.packages("effectsize")}
#if(!require(pwr)){install.packages("pwr")} #produces an APA style table for ANOVAs and other models
#if(!require(car)){install.packages("car")}#although we don't call this package directly, there are rstatix functions that are a wrapper for it and therefore it needs to be installed
#Note, this script results in a different simulation than is in the ReadySetR lesson
#sets a random seed so that we get the same results each time
set.seed(210820)
#sample size, M and SD for each group
Accurate <- c(rnorm(30, mean=1.18, sd=0.80), rnorm(30, mean=1.83, sd = 0.58), rnorm(30, mean = 1.76, sd = 0.56))
#set upper bound for DV
Accurate[Accurate>3]<-3
#set lower bound for DV
Accurate[Accurate<0]<-0
#sample size, M and SD for each group
moreTalk <- c(rnorm(30, mean=-.82, sd=0.91), rnorm(30, mean=-0.39, sd = 0.66), rnorm(30, mean = -0.04, sd = 0.71))
#set upper bound for DV
moreTalk[moreTalk>2]<- 2
#set lower bound for DV
moreTalk[moreTalk<-2]<- -2
#IDs for participants
ID<-factor(seq(1,90))
#name factors and identify how many in each group; should be in same order as first row of script
COND<-c(rep("High", 30), rep("Low", 30), rep("Control", 30))
#groups the 3 variables into a single df:  ID#, DV, condition
accSIM30 <-data.frame(ID, COND, Accurate, moreTalk)
head(accSIM30)
str(accSIM30)
#convert variable to factor
accSIM30$COND <- factor(accSIM30$COND)
str(accSIM30)
#ordering the factor
accSIM30$COND <- factor(accSIM30$COND, levels = c("Control", "Low", "High"))
#another structure check
str(accSIM30)
#write the simulated data as a .csv
write.table(accSIM30, file="accSIM.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
#acc_csv <- read.csv("accSIM.csv", header = TRUE)
#write the simulated data as a .csv
write.table(accSIM30, file="accSIM.csv", sep=",", col.names=TRUE, row.names=FALSE)
#write the simulated data as a .csv
#write.table(accSIM30, file="accSIM.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
acc_csv <- read.csv("accSIM.csv", header = TRUE)
View(acc_csv)
MADdf <- readRDS("MADdf.rds")
View(MADdf)
View(MADdf)
MADdf <- subset(MADdf, Index == 1)
View(MADdf)
OneWay_df <-(dplyr::select (MADdf, myFMprop, PctRblcn))
View(OneWay_df)
OneWay_df <- na.omit(OneWay_df)
OneWay_df <- na.omit(OneWay_df)
35.87 - 14.22
35.87 + 14.22
OneWay_df$Party <- cut(OneWay_df$PctRblcn, breaks = c(0, 30, 51, 100),
labels = c("DarkBlue", "Blue", "Red"))
psych::describeBy(myFMprop ~ Party, data = OneWay_df, mat=TRUE, digits = 2)
FM_res <- lm(myFMprop ~ Party, data = OneWay_df)
#TradPed_res
rstatix::shapiro_test(residuals(FM_res))
options(scipen=999)
FM_res <- lm(myFMprop ~ Party, data = OneWay_df)
#TradPed_res
rstatix::shapiro_test(residuals(FM_res))
omnibus1w <- rstatix::anova_test(OneWay_df, myFMprop ~ Party, detailed = FALSE)
omnibus1w
omnibus1w <- rstatix::anova_test(OneWay_df, myFMprop ~ Party, detailed = TRUE)
omnibus1w
omnibus1w <- rstatix::anova_test(OneWay_df, myFMprop ~ Party, detailed = FALSE)
omnibus1w
apaTables::apa.1way.table(iv = Republican, dv = myFMprop, show.conf.interval = TRUE, data = OneWay_df, table.number = 1, filename = "1wayHWTable.doc")
apaTables::apa.1way.table(iv = Party, dv = myFMprop, show.conf.interval = TRUE, data = OneWay_df, table.number = 1, filename = "1wayHWTable.doc")
omnibus1wHW_b <- aov(myFMprop ~ Party, data = OneWay_df)
apaTables::apa.aov.table(omnibus1wHW_b, table.number = 2, filename = "1wayHWTable2.doc")
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
library(tidyverse)
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
options(scipen=999)
MADdf <- readRDS("MADdf.rds")
MADdf <- subset(MADdf, Index == 1)
OneWay_df <-(dplyr::select (MADdf, myFMprop, PctRblcn))
OneWay_df <- na.omit(OneWay_df)
psych::describe(OneWay_df)
35.87 - 14.22
35.87 + 14.22
OneWay_df$Party <- cut(OneWay_df$PctRblcn, breaks = c(0, 30, 51, 100),
labels = c("DarkBlue", "Blue", "Red"))
psych::describeBy(myFMprop ~ Party, data = OneWay_df, mat=TRUE, digits = 2)
#OneWay_df$Republican <- cut(OneWay_df$PctRblcn, breaks = c(0, 21.65, 50.09, 100),
#labels = c("Lower", "Mean", "Higher"))
ggpubr::ggboxplot(OneWay_df, x = "Party", y = "myFMprop", add = "jitter",
color = "Party", title = "Figure 1. Evaluations of Wearing Facemasks as a Result of Republican Voting") #
psych::describeBy(myFMprop ~ Party, mat = TRUE, digits = 3, data = OneWay_df, type = 1)
FM_res <- lm(myFMprop ~ Party, data = OneWay_df)
#TradPed_res
rstatix::shapiro_test(residuals(FM_res))
ggpubr::ggqqplot(residuals(FM_res))
library(tidyverse)
OneWay_df %>%
rstatix::identify_outliers(myFMprop)
rstatix::levene_test(OneWay_df, myFMprop ~ Party)
omnibus1w <- rstatix::anova_test(OneWay_df, myFMprop ~ Party, detailed = FALSE)
omnibus1w
phoc <- rstatix::t_test(OneWay_df, myFMprop ~ Party, p.adjust.method = "bonferroni", detailed = TRUE)
phoc
apaTables::apa.1way.table(iv = Party, dv = myFMprop, show.conf.interval = TRUE, data = OneWay_df, table.number = 1, filename = "1wayHWTable.doc")
omnibus1wHW_b <- aov(myFMprop ~ Party, data = OneWay_df)
apaTables::apa.aov.table(omnibus1wHW_b, table.number = 2, filename = "1wayHWTable2.doc")
library(tidyverse)
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
ggpubr::ggboxplot(OneWay_df, x = "Party", y = "myFMprop", add = "jitter",
color = "Party", title = "Figure 1. Evaluations of Facemask Wearing as a Result of Republican Voting") +
ggpubr::stat_pvalue_manual(phoc, label = "p.adj.signif", tip.length = 0.02,
hide.ns = FALSE, y.position = c(5.5))
library(tidyverse)
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
ggpubr::ggboxplot(OneWay_df, x = "Party", y = "myFMprop", add = "jitter",
color = "Party", title = "Figure 1. Evaluations of Facemask Wearing as a Result of Republican Voting") +
ggpubr::stat_pvalue_manual(phoc, label = "p.adj.signif", tip.length = 0.02,
hide.ns = FALSE, y.position = c(5.5))
library(tidyverse)
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
ggpubr::ggboxplot(OneWay_df, x = "Party", y = "myFMprop", add = "jitter",
color = "Party", title = "Figure 1. Evaluations of Facemask Wearing as a Result of Republican Voting") +
ggpubr::stat_pvalue_manual(phoc, label = "p.adj.signif", tip.length = 0.02,
hide.ns = FALSE, y.position = c(105))
library(tidyverse)
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
ggpubr::ggboxplot(OneWay_df, x = "Party", y = "myFMprop", add = "jitter",
color = "Party", title = "Figure 1. Evaluations of Facemask Wearing as a Result of Republican Voting") +
ggpubr::stat_pvalue_manual(phoc, label = "p.adj.signif", tip.length = 0.02,
hide.ns = FALSE, y.position = c(103, 105, 103))
library(tidyverse)
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
ggpubr::ggboxplot(OneWay_df, x = "Party", y = "myFMprop", add = "jitter",
color = "Party", title = "Figure 1. Evaluations of Facemask Wearing as a Result of Republican Voting") +
ggpubr::stat_pvalue_manual(phoc, label = "p.adj.signif", tip.length = 0.02,
hide.ns = FALSE, y.position = c(103, 110, 103))
library(tidyverse)
phoc <- phoc %>%
rstatix::add_xy_position(x = "Party")
ggpubr::ggboxplot(OneWay_df, x = "Party", y = "myFMprop", add = "jitter",
color = "Party", title = "Figure 1. Evaluations of Facemask Wearing as a Result of Republican Voting") +
ggpubr::stat_pvalue_manual(phoc, label = "p.adj.signif", tip.length = 0.02,
hide.ns = FALSE, y.position = c(103, 110, 105))
effectsize::eta2_to_f(.013)
pwr::pwr.anova.test (k = 3, f = 0.114766, sig.level = .05, n = 164)
pwr::pwr.anova.test (k = 3, f = 0.114766, sig.level = .05, power = .80)
