#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
View(rm1w_df)
str(rm1w_df)
rm1w_df$Course <- factor(rm1w_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(rm1w_df)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w)df
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w_df)
str(rm1w_df)
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = StndtID ~ Course,
value.var = "TradPed")
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = deID ~ Course,
value.var = "TradPed")
str(rm1wWIDE_df)
head(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("StndtID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
headrm1wLONG_df
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df)
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp
psych::describeBy(TradPed ~ Course, mat = TRUE, type = 1, data = rm1wLONG_df)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
RMres
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
RMres_TradPed
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
summary(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres)TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed))
citr:::insert_citation()
ggpubr::ggqqplot(residuals(RMres_TradPed))
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = Wave,
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = Course,
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
library(tidyverse)
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
rmAOV <- rstatix::anova_test(data = RM1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV <- rstatix::anova_test(data = rm1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV
pwc <- Amodeo_long %>%
rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "none")
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "none", data = rm1wLONG_df)
pwc
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "bonf", data = rm1wLONG_df)
pwc
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings", title = "Course Evaluations across Doctoral Statistics Courses")
bxp
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
box <- box + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif",
tip.length = 0.02, hide.ns = TRUE, step.increase = 0.05)
box
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
box <- box + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif",
tip.length = 0.02, hide.ns = TRUE, step.increase = 0.05)
box
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- box + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE)
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE)
bxp
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w_df)
str(rm1w_df)
rm1w_df$Course <- factor(rm1w_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(rm1w_df)
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = deID ~ Course,
value.var = "TradPed")
str(rm1wWIDE_df)
head(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df)
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings", title = "Course Evaluations across Doctoral Statistics Courses")
bxp
psych::describeBy(TradPed ~ Course, mat = TRUE, type = 1, data = rm1wLONG_df)
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
summary(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed))
ggpubr::ggqqplot(residuals(RMres_TradPed))
library(tidyverse)
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
rmAOV <- rstatix::anova_test(data = rm1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "bonf", data = rm1wLONG_df)
pwc
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE)
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.5))
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.5))
bxp
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.5))
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
bxp
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
#big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w_df)
str(rm1w_df)
rm1w_df$Course <- factor(rm1w_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(rm1w_df)
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = deID ~ Course,
value.var = "TradPed")
str(rm1wWIDE_df)
head(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df)
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings", title = "Course Evaluations across Doctoral Statistics Courses")
bxp
psych::describeBy(TradPed ~ Course, mat = TRUE, type = 1, data = rm1wLONG_df)
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
summary(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed))
ggpubr::ggqqplot(residuals(RMres_TradPed))
library(tidyverse)
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
rmAOV <- rstatix::anova_test(data = rm1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "bonf", data = rm1wLONG_df)
pwc
rstatix::shapiro_test(residuals(RMres_TradPed))
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
bxp
effectsize::eta2_to_f(.014)
WebPower::wp.rmanova(n=70, ng=1, nm=3, f = .1192, nscor = .891, alpha = .05, power = NULL, type = 1)
WebPower::wp.rmanova(n=NULL, ng=1, nm=3, f = .1192, nscor = .891, alpha = .05, power = .80, type = 1)
mean(rm1wLONG_df$TradPed)
rm1wLONG_df$mDev <- rm1wLONG_df$TradPed - 4.319286
View(rm1wLONG_df)
rm1wLONG_df$mDev2 <- rm1wLONG_df$mDev * rm1wLONG_df$mDev
SST <- sum(rm1wLONG_df$mDev2)
SST
psych::describeBy(TradPed ~ Course, data = rm1wLONG_df)
psych::describeBy(TradPed ~ Course, mat=TRUE, type = 1, data = rm1wLONG_df)
psych::describeBy(TradPed ~ deID, mat=TRUE, type = 1, data = rm1wLONG_df)
(0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +   (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +   (0.4618802^2 * (3 - 1)) +   (0.3055050^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.22202022 * (3 - 1)) +  (0.4163332^2 * (3 - 1)) + (0.9018500^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.9451631^2 * (3 - 1)) +
(1.0066446^2 * (3 - 1)) +  (0.1154701^2 * (3 - 1)) +  (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5484828^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.11547012 * (3 - 1)) + (1.6165808^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.6429101^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) +
(0.1154701^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +
(0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) +
(0.2309401^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.0000000	^2 * (3 - 1)) +  (0.2309401^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) +   (0.4000000^2 * (3 - 1)) + (0.34641022 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503	^2 * (3 - 1)) +
(0.0000000^2 * (3 - 1)) + (0.2000000	^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +
(0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1))
(0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +   (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +   (0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.2220202^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.9018500^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.9451631^2 * (3 - 1)) +
(1.0066446^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5484828^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.6165808^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.6429101^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) +
(0.1154701^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +
(0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) +
(0.2309401^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) +  (0.2309401^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) +   (0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +
(0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +
(0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1))
psych::describeBy(TradPed ~ Course, mat = TRUE, digits = 3, type = 1, data = rm1wLONG_df)
(70 * (4.211 - 4.319286)^2) + (70 * (4.332 - 4.319286)^2) + (70 * (4.414 - 4.319286)^2)
SSR
SSR <- 34.255 - 1.460
SSR
SSB <- 103.9144 - 34.255
SSB
(70*3) - 1
1.4601/2
1.4601/2#MSM
32.795/65#MSR
.7301/.5045
View(rm1wWIDE_df)
#calculating degrees of freedom for the residual
67-2
1.4601/2#MSM
32.795/65#MSR
.7301/.5045
.7301/.5045
qf(.05, 2, 65)
qf(.05, 2, 65, lower.tail = FALSE)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w_df)
str(rm1w_df)
rm1w_df$Course <- factor(rm1w_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(rm1w_df)
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = deID ~ Course,
value.var = "TradPed")
str(rm1wWIDE_df)
head(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
nrows(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
nrow(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
nrow(rm1wWIDE_df)#counts number of rows (cases)
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df)
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings", title = "Course Evaluations across Doctoral Statistics Courses")
bxp
psych::describeBy(TradPed ~ Course, mat = TRUE, type = 1, data = rm1wLONG_df)
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
summary(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed))
ggpubr::ggqqplot(residuals(RMres_TradPed))
library(tidyverse)
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
rmAOV <- rstatix::anova_test(data = rm1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "bonf", data = rm1wLONG_df)
pwc
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
bxp
effectsize::eta2_to_f(.014)
WebPower::wp.rmanova(n=70, ng=1, nm=3, f = .1192, nscor = .891, alpha = .05, power = NULL, type = 1)
WebPower::wp.rmanova(n=NULL, ng=1, nm=3, f = .1192, nscor = .891, alpha = .05, power = .80, type = 1)
mean(rm1wLONG_df$TradPed)
rm1wLONG_df$mDev <- rm1wLONG_df$TradPed - 4.319286
rm1wLONG_df$mDev <- rm1wLONG_df$TradPed - 4.319286
head(rm1wLONG_df)#shows first six rows of dataset
sum(rm1wLONG_df$mDev)
sum(rm1wLONG_df$mDev)
rm1wLONG_df$mDev2 <- rm1wLONG_df$mDev * rm1wLONG_df$mDev
head
rm1wLONG_df$mDev2 <- rm1wLONG_df$mDev * rm1wLONG_df$mDev
head
rm1wLONG_df$mDev2 <- rm1wLONG_df$mDev * rm1wLONG_df$mDev
head(rm1wLONG_df)#shows first six rows of dataset
SST <- sum(rm1wLONG_df$mDev2)
SST
(0.8717798^2 * (3 - 1)) + (0.4163332	^2 * (3 - 1)) + (0.6928203	^2 * (3 - 1)) + (0.4000000	^2 * (3 - 1)) +   (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +   (0.7023769^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.2220202^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.9018500^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.9451631^2 * (3 - 1)) +
(1.0066446^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5484828^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.6165808^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.6429101^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) +
(0.1154701^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +
(0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) +
(0.2309401^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) +  (0.2309401^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) +   (0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +
(0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +
(0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1))
SSW <- (0.8717798^2 * (3 - 1)) + (0.4163332	^2 * (3 - 1)) + (0.6928203	^2 * (3 - 1)) + (0.4000000	^2 * (3 - 1)) +   (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +   (0.7023769^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.2220202^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.9018500^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.9451631^2 * (3 - 1)) +
(1.0066446^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5484828^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.6165808^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.6429101^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) +
(0.1154701^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +
(0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) +
(0.2309401^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) +  (0.2309401^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) +   (0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +
(0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +
(0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1))
SSW
(70 * (4.211 - 4.319286)^2) + (70 * (4.332 - 4.319286)^2) + (70 * (4.414 - 4.319286)^2)
SSR <- 36.895 - 1.460
SSR
SSB <- 103.9144 - 35.435
SSB
#calculating degrees of freedom for the residual
67-2
1.4601/2#MSM
32.795/65#MSR
1.4601/2#MSM
35.435/65#MSR
.7301/.5452
qf(.05, 2, 65, lower.tail = FALSE)
big <- readRDS("TEPPout.rds")
big <- readRDS("ReC.rds")
View(big)
#Creates a list of the variables that belong to that scale
SRPed_vars <- c('InclsvClassrm', 'EquitableEval','MultPerspectives', 'DEIintegration')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$SRPed <- sjstats::mean_n(big[, SRPed_vars], .75)
#Creates a list of the variables that belong to that scale
SRPed_vars <- c('InclsvClassrm', 'EquitableEval','MultPerspectives', 'DEIintegration')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$SRPed <- sjstats::mean_n(big[, SRPed_vars], .75)
#if the scoring script won't run, try this one:
big$SRPed <- sjstats::mean_n(big[, ..SRPed_vars], .75)
#Creates a list of the variables that belong to that scale
SRPed_vars <- c('InclusvClassrm', 'EquitableEval','MultPerspectives', 'DEIintegration')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$SRPed <- sjstats::mean_n(big[, SRPed_vars], .75)
#if the scoring script won't run, try this one:
big$SRPed <- sjstats::mean_n(big[, ..SRPed_vars], .75)
mixt_df <- (dplyr::select (big, StndtID, Course, Centering, SRPed))
mixt_df <- (dplyr::select (big, deID, Course, Centering, SRPed))
View(mixt_df)
str(mixt_df
str(mixt_df
str(mixt_df)
mixt_df$Course <- factor(mixt_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(mixt_df)
mixt_df <- na.omit(mixt_df)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
SRPed_vars <- c('InclusvClassrm', 'EquitableEval','MultPerspectives', 'DEIintegration')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$SRPed <- sjstats::mean_n(big[, SRPed_vars], .75)
#if the scoring script won't run, try this one:
big$SRPed <- sjstats::mean_n(big[, ..SRPed_vars], .75)
mixt_df <- (dplyr::select (big, deID, Course, Centering, SRPed))
str(mixt_df)
mixt_df$Course <- factor(mixt_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(mixt_df)
mixt_df <- na.omit(mixt_df)
library(tidyverse)
mixt_df <- mixt_df%>%
dplyr::group_by(deID)%>%
filter(n()=3)
library(tidyverse)
mixt_df <- mixt_df%>%
dplyr::group_by(deID)%>%
dplyr::filter(n()=3)
library(tidyverse)
mixt_df <- mixt_df%>%
dplyr::group_by(deID)%>%
dplyr::filter(n()==3)
198/3
mixt_box <- ggpubr::ggboxplot(mixt_df, x = "Course", y = "SRPed", color = "Centering", palette = "jco", xlab = "Statistics Sequence", ylab = "Socially and Culturally Responsive Pedagogy", title = "Socially Responsive Course Evaluations as a Function of Centering and Time"
)
mixt_box <- ggpubr::ggboxplot(mixt_df, x = "Course", y = "SRPed", color = "Centering", palette = "jco", xlab = "Statistics Sequence", ylab = "Socially and Culturally Responsive Pedagogy", title = "Socially Responsive Course Evaluations as a Function of Centering and Time"
)
mixt_box
psych::describeBy(SRPed ~ Course + Centering, data = mixt_df, type = 1, mat = TRUE, digits = 3)
mixt_df <- as.data.frame(mixt_df)
psych::describeBy(SRPed ~ Course + Centering, data = mixt_df, type = 1, mat = TRUE, digits = 3)
mixt_mod <- aov(SRPed ~ Course*ReCentering, mixt_df)
mixt_mod <- aov(SRPed ~ Course*Centering, mixt_df)
summary(mixt_mod)
mixt_resid <- residuals(mixt_mod)
shapiro.test(mixt_resid)
hist(mixt_resid)
qqnorm(mixt_resid)
mixt_df%>%
group_by(Course, Centering)%>%
rstatix::identify_outliers(SRPed)
mixt_df %>%
group_by(Course)%>%
rstatix::levene_test(SRPed ~ Centering))
mixt_df %>%
group_by(Course)%>%
rstatix::levene_test(SRPed ~ Centering)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
rstatix::anova_test(data = mixt_df, dv = SRPed, wid = deID, between = Centering, within = Course)
mixt_df %>%
group_by(Course) %>%
rstatix::anova_test(dv = SRPed, wid = deID, between = Centering) %>%
rstatix::get_anova_table() %>%
rstatix::adjust_pvalue(method = "bonferroni")
