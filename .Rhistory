round(mean(tiny3$abslt_mOvI, na.rm = TRUE), 3)
tiny3$mdev2_OvI <- (tiny3$Mdev_OvI * tiny3$Mdev_OvI)
tiny3$mdev2_OvI <- (tiny3$Mdev_OvI * tiny3$Mdev_OvI)
sum(tiny3$mdev2_OvI, na.rm = TRUE)
var_OvI <- sum(tiny3$mdev2_OvI/((nrow(tiny3) - 1)))
var_OvI
115.0973/(113-1)
var(tiny3$OvInstructor, na.rm = TRUE) #checking my work
sd_OvI <- sqrt(var_OvI)#calculating with the object I created
sd_OvI
sqrt (1.027655)#calculated with the actual numbers
sd(tiny3$OvInstructor)#checking my work with the code from baseR
#first the mean
tiny3$M_MyC <- mean(tiny3$MyContribution, na.rm=TRUE)
#second the mean deviation
tiny3$Mdev_MyC <- (tiny3$MyContribution-tiny3$M_MyC)
#fourth the variance
var_MyC <- sum(tiny3$mdev2_MyC/((nrow(tiny3) - 1)))
var_MyC
#finally the standard deviation
sd_MyC <- sqrt(var_MyC)
sd_MyC#checking my work
sd(tiny3$MyContribution)#checking my work
tiny3$crossproduct <- (tiny3$Mdev_OvI * tiny3$Mdev_MyC)
xp_sum <- sum(tiny3$crossproduct)
xp_sum
cov <- (1/(113-1)) * 46.74336
cov
0.4173514/(1.013733*0.8338)
cor.test(tiny3$OvInstructor, tiny3$MyContribution)
ReCdf <- readRDS("ReC.rds")
JustANOVA <- subset(ReCdf, Course == "ANOVA")
library(tidyverse)
tiny1 <- JustANOVA %>%
dplyr::select (OvInstructor)
tiny1 <- na.omit(tiny1)
str(tiny1$OvInstructor)
pastecs::stat.desc(tiny1$OvInstructor, norm=TRUE)
rstatix::t_test(tiny1, OvInstructor ~ 1, mu = 4.4, detailed = TRUE)
rstatix::cohens_d(tiny1, OvInstructor ~ 1, ref.group = NULL, mu = 4.4)
ggpubr::ggboxplot(tiny1$OvInstructor, ylab = "Course Evaluation Ratings", xlab = FALSE,
add = "jitter", title = "Figure 1. Overall Instructor Ratings for ANOVA")
pwr::pwr.t.test(d = -0.211	, n = 113, power = NULL, sig.level = 0.05,
type = "one.sample", alternative = "two.sided")
pwr::pwr.t.test(d = -0.211	, n = 113, power = NULL, sig.level = 0.05,
type = "one.sample", alternative = "two.sided")
pwr::pwr.t.test(d = -0.211, n = NULL, power = 0.8, sig.level = 0.05,
type = "one.sample", alternative = "two.sided")
mean(tiny1$OvInstructor, na.rm=TRUE)
#first the mean
tiny1$M_OvInst <- mean(tiny1$OvInstructor, na.rm=TRUE)
#second the mean deviation
tiny1$Mdev_OvInst <- (tiny1$OvInstructor-tiny1$M_OvInst)
#third the mean deviation squared
tiny1$mdev2_OvInst <- (tiny1$Mdev_OvInst  * tiny1$Mdev_OvInst)
#fourth the variance
var_OvInst <- sum(tiny1$mdev2_OvInst /((nrow(tiny1) - 1)))
var_OvInst
#finally the standard deviation
sd_OvInst <- sqrt(var_OvInst)
sd_OvInst
(4.185 - 4.4)/(1.027655/sqrt(113))
(4.185841 - 4.4)/(1.027655/sqrt(114))
(4.185841 - 4.4)/(1.013733/sqrt(114))
(4.185841 - 4.4)/(1.013733/sqrt(113))
(4.185841 - 4.4)/(1.013733/sqrt(113))
113 - 1
qt(p = 0.05/2, df = 113, lower.tail = FALSE)
(4.185841) - ((1.989686)*(1.98118/sqrt(113)))
(4.185841) + ((1.989686)*(1.98118/sqrt(113)))
(4.185841) - ((1.98118)*(1.013733/sqrt(113)))
(4.185841) + ((1.98118)*(1.013733/sqrt(113)))
#First formula
(4.185841 - 4.4)/1.013733
#Second formula
-2.245701/sqrt(113)
big <- readRDS("ReC.rds")
JustANOVA <- subset(big, Course == "ANOVA")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
JustANOVA$TradPed <- sjstats::mean_n(JustANOVA[, TradPed_vars], .75)
IndT_df <-(dplyr::select (JustANOVA, Dept, TradPed))
IndT_df <- na.omit(IndT_df)
str(IndT_df)
IndT_df$Dept <- factor(IndT_df$Dept)
str(IndT_df$Dept)
psych::describeBy(IndT_df ~ Dept,  type =1, mat=TRUE)
library(tidyverse)#opening this package so I can use the pipes
shapiro <- IndT_df%>%
group_by(Dept) %>%
rstatix::shapiro_test(TradPed)
shapiro
psych::pairs.panels(IndT_df)
rstatix::levene_test(IndT_df, TradPed ~ Dept, center=median)
indT.test <- rstatix::t_test(IndT_df, TradPed~Dept, var.equal=TRUE, detailed=TRUE) %>%
rstatix::add_significance()
indT.test
rstatix::cohens_d(IndT_df, TradPed ~ Dept, var.equal = TRUE)
apaTables::apa.1way.table(Dept, TradPed, IndT_df)
indT.box <- ggpubr::ggboxplot(IndT_df, x = "Dept", y = "TradPed", color = "Dept", palette=c("#00AFBB", "#FC4E07"), add = "jitter",  title = "Figure 1. Traditional Pedagogy as a Function of Academic Department")
ind.testT <- indT.test %>% rstatix::add_xy_position(x = "Dept") #autocomputes p-value labels positions
indT.box <- indT.box +
ggpubr::stat_pvalue_manual(ind.testT, label = "p.signif", tip.length=.02, hide.ns = FALSE, y.position = c(6)) +
labs(subtitle = rstatix::get_test_label(indT.test, detailed=TRUE)) #adds t-test results
indT.box
pwr::pwr.t.test(d = 0.30, n = 112, power = NULL, sig.level = 0.05,
type = "two.sample", alternative = "two.sided")
pwr::pwr.t.test(d = 0.3, n = NULL, power = 0.8, sig.level = 0.05,
type = "two.sample", alternative = "two.sided")
psych::describeBy(IndT_df ~ Dept, type =1, mat=TRUE)
sqrt((0.7547259^2/81) + (1.0948953^2/31))
(4.129630 - 3.870968)/0.2137828
sqrt((0.7547259^2/81) + (1.0948953^2/31))
(4.129630 - 3.870968)/0.2137828
qt(0.05/2, 112, lower.tail = TRUE)
qt(0.05/2, 112, lower.tail = FALSE)
(4.129630 - 3.870968) - (1.209929 * 0.2137828)
(4.129630 - 3.870968) + (1.209929 * 0.2137828)
1.209929 * (sqrt((81 + 31)/(81 * 31)))
Paired_df <-(dplyr::select (ReC.rds, StndtID, Course, SCRPed))
big <- readRDS("ReC.rds")
Paired_df <-(dplyr::select (ReC.rds, StndtID, Course, SCRPed))
Paired_df <-(dplyr::select (ReC, StndtID, Course, SCRPed))
Paired_df <-(dplyr::select (big, StndtID, Course, SCRPed))
View(big)
Paired_df <-(dplyr::select (big, deID, Course, SCRPed))
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(JustANOVA[, TradPed_vars], .75)
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, TradPed_vars], .75)
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, TradPed_vars], .75)
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, TradPed_vars], .75)
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, TradPed_vars], .75)
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, ..TradPed_vars], .75)
Paired_df <-(dplyr::select (larger, deID, Course, TradPed))
Paired_df <- subset(Paired_df, Course == "ANOVA" | Course == "Multivariate")
View(Paired_df)
str(Paired_df)
paired_wide <- reshape2::dcast(data = Paired_df, formula =deID ~ Course, value.var = "TradPed")
View(paired_wide)
str(paired_wide)
paired_wide <- na.omit(paired_wide)
View(paired_wide)
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide)
psych::pairs.panels(paired_wide)
rstatix::shapiro_test(paired_wide, Diff)
rstatix::shapiro_test(paired_wide, DIFF)
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, ..TradPed_vars], .75)
Paired_df <-(dplyr::select (larger, deID, Course, TradPed))
Paired_df <-(dplyr::select (larger, deID, Course, TradPed))
Paired_df <- subset(Paired_df, Course == "ANOVA" | Course == "Multivariate")
str(Paired_df)
paired_wide <- reshape2::dcast(data = Paired_df, formula =deID ~ Course, value.var = "TradPed")
str(paired_wide)
paired_wide <- na.omit(paired_wide)
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide)
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, ..TradPed_vars], .75)
Paired_long <-(dplyr::select (larger, deID, Course, TradPed))
Paired_long <- subset(Paired_long, Course == "ANOVA" | Course == "Multivariate")
str(Paired_long)
paired_wide <- reshape2::dcast(data = Paired_df, formula =deID ~ Course, value.var = "TradPed")
paired_wide <- reshape2::dcast(data = Paired_long, formula =deID ~ Course, value.var = "TradPed")
str(paired_wide)
paired_wide <- na.omit(paired_wide)
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide)
rstatix::shapiro_test(paired_wide, DIFF)
psych::pairs.panels(paired_wide)
psych::pairs.panels(paired_wide)
rstatix::t_test(paired_long, TradPed ~ Course, paired = TRUE, detailed = TRUE)
rstatix::t_test(Paired_long, TradPed ~ Course, paired = TRUE, detailed = TRUE)
View(Paired_long)
str(Paired_long)
View(Paired_long)
rstatix::t_test(paired_wide, TradPed ~ Course, paired = TRUE, detailed = TRUE)
View(paired_wide)
View(Paired_long)
rstatix::t_test(Paired_long, TradPed ~ Course, paired = TRUE, detailed = TRUE)
Paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
head(Paired_long2)
str(Paired_long2)
rstatix::t_test(Paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)
Paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
Paired_long2 <- rename(Paired_long2, Course = variable, TradPed = value1)
Paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
Paired_long2 <- dplyr::rename(Paired_long2, Course = variable, TradPed = value1)
Paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
Paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
Paired_long2 <- dplyr::rename(Paired_long2, Course = variable, TradPed = value)
head(Paired_long2)
rstatix::t_test(Paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)
View(Paired_long2)
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, ..TradPed_vars], .75)
paired_long <-(dplyr::select (larger, deID, Course, TradPed))
larger <- readRDS("ReC.rds")
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, ..TradPed_vars], .75)
paired_long <-(dplyr::select (larger, deID, Course, TradPed))
paired_long <- subset(Paired_long, Course == "ANOVA" | Course == "Multivariate")
paired_long <- subset(paired_long, Course == "ANOVA" | Course == "Multivariate")
str(paired_long)
paired_wide <- reshape2::dcast(data = paired_long, formula =deID ~ Course, value.var = "TradPed")
str(paired_wide)
paired_wide <- na.omit(paired_wide)
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide)
rstatix::shapiro_test(paired_wide, DIFF)
psych::pairs.panels(paired_wide)
paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
paired_long2 <- dplyr::rename(paired_long2, Course = variable, TradPed = value)
head(paired_long2)
rstatix::t_test(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)
rstatix::cohens_d(paired_long2, TradPed ~ Course, paired = TRUE)
library(tidyverse)  #needed to use the pipe
# Creating a smaller df to include only the variables I want in the
# table
Descripts_paired <- paired_wide %>%
select(ANOVA, Multivariate, DIFF)
# using the apa.cor.table function for means, standard deviations,
# and correlations the filename command will write the table as a
# word document to your file
apaTables::apa.cor.table(Descripts_paired, table.number = 1, filename = "Tab1_PairedT.doc")
paired_T <- rstatix::cohens_d(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE) %>%
rstatix::add_significance()
paired_T <- t_test(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)%>%
rstatix::add_significance()
paired_T <- rstatix::t_test(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)%>%
rstatix::add_significance()
paired_T
pairT.box <- ggpubr::ggpaired(paired_long2, x = "Course", y = "TradPed", order = c("ANOVA",
"Multivariate"), line.color = "gray", palette = c("npg"), color = "Course",
ylab = "Traditional Pedagogy", xlab = "Statistics Course", title = "Figure 1. Evaluation of Traditional Pedagogy as a Function of Course")
paired_T <- paired_T %>%
rstatix::add_xy_position(x = "Course")  #autocomputes p-value labels positions
pairT.box <- pairT.box + ggpubr::stat_pvalue_manual(paired_T, tip.length = 0.01,
y.position = c(15)) + labs(subtitle = rstatix::get_test_label(paired_T,
detailed = TRUE))
pairT.box
pairT.box <- ggpubr::ggpaired(paired_long2, x = "Course", y = "TradPed", order = c("ANOVA",
"Multivariate"), line.color = "gray", palette = c("npg"), color = "Course",
ylab = "Traditional Pedagogy", xlab = "Statistics Course", title = "Figure 1. Evaluation of Traditional Pedagogy as a Function of Course")
paired_T <- paired_T %>%
rstatix::add_xy_position(x = "Course")  #autocomputes p-value labels positions
pairT.box <- pairT.box + ggpubr::stat_pvalue_manual(paired_T, tip.length = 0.01,
y.position = c(5)) + labs(subtitle = rstatix::get_test_label(paired_T,
detailed = TRUE))
pairT.box
pairT.box <- ggpubr::ggpaired(paired_long2, x = "Course", y = "TradPed", order = c("ANOVA",
"Multivariate"), line.color = "gray", palette = c("npg"), color = "Course",
ylab = "Traditional Pedagogy", xlab = "Statistics Course", title = "Figure 1. Evaluation of Traditional Pedagogy as a Function of Course")
paired_T <- paired_T %>%
rstatix::add_xy_position(x = "Course")  #autocomputes p-value labels positions
pairT.box <- pairT.box + ggpubr::stat_pvalue_manual(paired_T, tip.length = 0.01,
y.position = c(5.5)) + labs(subtitle = rstatix::get_test_label(paired_T,
detailed = TRUE))
pairT.box
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, ..TradPed_vars], .75)
paired_long <-(dplyr::select (larger, deID, Course, TradPed))
paired_long <- subset(paired_long, Course == "ANOVA" | Course == "Multivariate")
str(paired_long)
paired_wide <- reshape2::dcast(data = paired_long, formula =deID ~ Course, value.var = "TradPed")
str(paired_wide)
paired_wide <- na.omit(paired_wide)
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide)
rstatix::shapiro_test(paired_wide, DIFF)
psych::pairs.panels(paired_wide)
paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
paired_long2 <- dplyr::rename(paired_long2, Course = variable, TradPed = value)
head(paired_long2)
rstatix::t_test(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)
rstatix::cohens_d(paired_long2, TradPed ~ Course, paired = TRUE)
library(tidyverse)  #needed to use the pipe
# Creating a smaller df to include only the variables I want in the
# table
Descripts_paired <- paired_wide %>%
select(ANOVA, Multivariate, DIFF)
# using the apa.cor.table function for means, standard deviations,
# and correlations the filename command will write the table as a
# word document to your file
apaTables::apa.cor.table(Descripts_paired, table.number = 1, filename = "Tab1_PairedT.doc")
paired_T <- rstatix::t_test(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)%>%
rstatix::add_significance()
paired_T
pairT.box <- ggpubr::ggpaired(paired_long2, x = "Course", y = "TradPed", order = c("ANOVA",
"Multivariate"), line.color = "gray", palette = c("npg"), color = "Course",
ylab = "Traditional Pedagogy", xlab = "Statistics Course", title = "Figure 1. Evaluation of Traditional Pedagogy as a Function of Course")
paired_T <- paired_T %>%
rstatix::add_xy_position(x = "Course")  #autocomputes p-value labels positions
pairT.box <- pairT.box + ggpubr::stat_pvalue_manual(paired_T, tip.length = 0.01,
y.position = c(5.5)) + labs(subtitle = rstatix::get_test_label(paired_T,
detailed = TRUE))
pairT.box
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide$DIFF)
-0.12/(0.8/sqrt(77))
qt(0.05/2, 76, lower.tail = TRUE)
qt(0.05/2, 76, lower.tail = FALSE)
-0.12-(-1.991673*((0.8/(sqrt(77)))))
-0.12+(-1.991673*((0.8/sqrt(77))))
-0.12/.08
--1.316245/sqrt(77)
-0.12/.08
-1.316245/sqrt(77)
-0.12/.08
-1.316245/(sqrt(77))
-0.12/.8
-1.316245/(sqrt(77))
-0.12/.8
-1.316245/(qrt(77)
-0.12/.8
-1.316245/(sqrt(77)
-0.12/.8
-1.316245/(sqrt(77)
-0.12/.8
-1.316245/sqrt(77)
(.08)/2.92
pwr::pwr.t.test(d=0.02,n = 33, power=NULL,sig.level=0.05,type="paired",alternative="two.sided")
pwr::pwr.t.test(d=0.02,n = NULL, power=0.8,sig.level=0.05,type="paired",alternative="two.sided")
set.seed(220820)
#These define the characteristics of the verbal variable. It is essential that the object names (e.g., A_mean) are not changed because they will be fed to the function in the faux package.
sub_n <- 19624
A_mean <- 8.37
B_mean <- 8.41
A_sd <- 3.36
B_sd <- 3.21
AB_r <- 0.3
#the faux package can simulate a variety of data. This function within the faux package will use the objects above to simulate paired samples data
paired_V2 <- faux::rnorm_multi(
n = sub_n,
vars = 2,
r = AB_r,
mu = c(A_mean, B_mean),
sd = c(A_sd, B_sd),
varnames = c("Verbal_BL", "Verbal_WH")
)
paired_V2 <- paired_V2 %>% dplyr::mutate(PhysID = row_number())
#restructuring data to the long form
df_longV2 <- data.table::melt(data.table::setDT(paired_V2), id.vars=c("PhysID"), measure.vars=list(c("Verbal_BL", "Verbal_WH")))
df_longV2 <- rename(df_longV2, PatientRace = variable, Verbal = value)
df_longV2$PtRace <- plyr::mapvalues(df_longV2$PatientRace, from = c("Verbal_BL", "Verbal_WH"), to = c("Black", "White"))
rstatix::t_test(df_longV2, Verbal ~ PtRace, paired=TRUE, detailed=TRUE)
rstatix::cohens_d(df_longV2, Verbal ~ PtRace, paired=TRUE)
pwr::pwr.t.test(d=-0.153,n = 77, power=NULL,sig.level=0.05,type="paired",alternative="two.sided")
pwr::pwr.t.test(d=-0.153,n = NULL, power=.80,sig.level=0.05,type="paired",alternative="two.sided")
larger <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
larger$TradPed <- sjstats::mean_n(larger[, ..TradPed_vars], .75)
paired_long <-(dplyr::select (larger, deID, Course, TradPed))
paired_long <-(dplyr::select (larger, deID, Course, TradPed))
paired_long <- subset(paired_long, Course == "ANOVA" | Course == "Multivariate")
str(paired_long)
paired_wide <- reshape2::dcast(data = paired_long, formula =deID ~ Course, value.var = "TradPed")
str(paired_wide)
paired_wide <- na.omit(paired_wide)
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide)
rstatix::shapiro_test(paired_wide, DIFF)
psych::pairs.panels(paired_wide)
paired_long2 <- data.table::melt(data.table::setDT(paired_wide), id.vars = c("deID"),
measure.vars = list(c("ANOVA", "Multivariate")))
paired_long2 <- dplyr::rename(paired_long2, Course = variable, TradPed = value)
head(paired_long2)
rstatix::t_test(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)
rstatix::cohens_d(paired_long2, TradPed ~ Course, paired = TRUE)
library(tidyverse)  #needed to use the pipe
# Creating a smaller df to include only the variables I want in the
# table
Descripts_paired <- paired_wide %>%
select(ANOVA, Multivariate, DIFF)
# using the apa.cor.table function for means, standard deviations,
# and correlations the filename command will write the table as a
# word document to your file
apaTables::apa.cor.table(Descripts_paired, table.number = 1, filename = "Tab1_PairedT.doc")
paired_T <- rstatix::t_test(paired_long2, TradPed ~ Course, paired = TRUE, detailed = TRUE)%>%
rstatix::add_significance()
paired_T
pairT.box <- ggpubr::ggpaired(paired_long2, x = "Course", y = "TradPed", order = c("ANOVA",
"Multivariate"), line.color = "gray", palette = c("npg"), color = "Course",
ylab = "Traditional Pedagogy", xlab = "Statistics Course", title = "Figure 1. Evaluation of Traditional Pedagogy as a Function of Course")
paired_T <- paired_T %>%
rstatix::add_xy_position(x = "Course")  #autocomputes p-value labels positions
pairT.box <- pairT.box + ggpubr::stat_pvalue_manual(paired_T, tip.length = 0.01,
y.position = c(5.5)) + labs(subtitle = rstatix::get_test_label(paired_T,
detailed = TRUE))
pairT.box
pwr::pwr.t.test(d=-0.153,n = 77, power=NULL,sig.level=0.05,type="paired",alternative="two.sided")
pwr::pwr.t.test(d=-0.153,n = NULL, power=.80,sig.level=0.05,type="paired",alternative="two.sided")
paired_wide$DIFF <- paired_wide$ANOVA - paired_wide$Multivariate
psych::describe(paired_wide$DIFF)
-0.12/(0.8/sqrt(77))
qt(0.05/2, 76, lower.tail = TRUE)
qt(0.05/2, 76, lower.tail = FALSE)
-0.12-(-1.991673*((0.8/(sqrt(77)))))
-0.12+(-1.991673*((0.8/sqrt(77))))
-0.12/.8
-1.316245/sqrt(77)
psych::describeBy(IndT_df ~ Dept, type =1, mat=TRUE)
big <- readRDS("ReC.rds")
JustANOVA <- subset(big, Course == "ANOVA")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
JustANOVA$TradPed <- sjstats::mean_n(JustANOVA[, TradPed_vars], .75)
psych::describeBy(IndT_df ~ Dept, type =1, mat=TRUE)
big <- readRDS("ReC.rds")
JustANOVA <- subset(big, Course == "ANOVA")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
JustANOVA$TradPed <- sjstats::mean_n(JustANOVA[, TradPed_vars], .75)
big <- readRDS("ReC.rds")
JustANOVA <- subset(big, Course == "ANOVA")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
JustANOVA$TradPed <- sjstats::mean_n(JustANOVA[, TradPed_vars], .75)
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
JustANOVA$TradPed <- sjstats::mean_n(JustANOVA[, ..TradPed_vars], .75)
big <- readRDS("ReC.rds")
JustANOVA <- subset(big, Course == "ANOVA")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
JustANOVA$TradPed <- sjstats::mean_n(JustANOVA[, ..TradPed_vars], .75)
IndT_df <-(dplyr::select (JustANOVA, Dept, TradPed))
IndT_df <- na.omit(IndT_df)
str(IndT_df)
IndT_df$Dept <- factor(IndT_df$Dept)
str(IndT_df$Dept)
psych::describeBy(IndT_df ~ Dept,  type =1, mat=TRUE)
library(tidyverse)#opening this package so I can use the pipes
shapiro <- IndT_df%>%
group_by(Dept) %>%
rstatix::shapiro_test(TradPed)
shapiro
psych::pairs.panels(IndT_df)
rstatix::levene_test(IndT_df, TradPed ~ Dept, center=median)
indT.test <- rstatix::t_test(IndT_df, TradPed~Dept, var.equal=TRUE, detailed=TRUE) %>%
rstatix::add_significance()
indT.test
rstatix::cohens_d(IndT_df, TradPed ~ Dept, var.equal = TRUE)
apaTables::apa.1way.table(Dept, TradPed, IndT_df)
indT.box <- ggpubr::ggboxplot(IndT_df, x = "Dept", y = "TradPed", color = "Dept", palette=c("#00AFBB", "#FC4E07"), add = "jitter",  title = "Figure 1. Traditional Pedagogy as a Function of Academic Department")
ind.testT <- indT.test %>% rstatix::add_xy_position(x = "Dept") #autocomputes p-value labels positions
indT.box <- indT.box +
ggpubr::stat_pvalue_manual(ind.testT, label = "p.signif", tip.length=.02, hide.ns = FALSE, y.position = c(6)) +
labs(subtitle = rstatix::get_test_label(indT.test, detailed=TRUE)) #adds t-test results
indT.box
pwr::pwr.t.test(d = 0.30, n = 112, power = NULL, sig.level = 0.05,
type = "two.sample", alternative = "two.sided")
pwr::pwr.t.test(d = 0.3, n = NULL, power = 0.8, sig.level = 0.05,
type = "two.sample", alternative = "two.sided")
psych::describeBy(IndT_df ~ Dept, type =1, mat=TRUE)
sqrt((0.7547259^2/81) + (1.0948953^2/31))
(4.129630 - 3.870968)/0.2137828
qt(0.05/2, 112, lower.tail = TRUE)
qt(0.05/2, 112, lower.tail = FALSE)
(4.129630 - 3.870968) - (1.209929 * 0.2137828)
(4.129630 - 3.870968) + (1.209929 * 0.2137828)
1.209929 * (sqrt((81 + 31)/(81 * 31)))
