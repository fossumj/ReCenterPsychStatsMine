psych::describeBy(TradPed ~ Dept + Stage, mat = TRUE, data = TwoWay_df, digits = 3)
psych::describeBy(TradPed ~ Dept + Stage, mat = TRUE, data = TwoWay_df, digits = 3)
SSM <- 12 * (4.817 - 4.06)^2 + 9 * (3.889 - 2.947)^2 + 24 * (4.317 - 4.06)^2 +
20 * (3.720 - 4.06)^2 + 36 * (3.836 - 4.06)^2 + 11 * (4.145 - 4.06)^2
SSM
((0.217^2)*(12-1))+ ((0.348^2)*(9-1)) + ((0.700^2)*(24-1)) + ((1.264^2)*(20-1)) + ((0.805^2)*(36-1)) + ((0.658^2)*(11-1))
psych::describeBy(TradPed ~ Dept, mat=TRUE, data = TwoWay_df, digits=3)
SSM_dept <- 72 * (4.160 - 4.06)^2 + 37 * (3.875 - 4.06)^2
SSM_dept <- 72 * (4.160 - 4.06)^2 + 37 * (3.875 - 4.06)^2
SSM_dept
psych::describeBy(TradPed ~ Stage, mat=TRUE, data = TwoWay_df, digits=3)
SSM_stage <- 21 * (4.160 - 4.06)^2 + 44 * (4.045 - 4.06)^2 + 47 * (3.909 - 4.06)^2
SSM_stage
SSM_int <- 20.64585 - (1.986325 + 1.291547)
SSM_int
20.646 _ 1.986 + 1.292 + 17.368 + 70.124
20.646 + 1.986 + 1.292 + 17.368 + 70.124
1.986 + 1.292 + 17.368 + 70.124
SSM <- 12 * (4.817 - 4.06)^2 + 9 * (3.889 - 2.947)^2 + 24 * (4.317 - 4.06)^2 +
20 * (3.720 - 4.06)^2 + 36 * (3.836 - 4.06)^2 + 11 * (4.145 - 4.06)^2
SSM
SSR <- ((0.217^2)*(12-1))+ ((0.348^2)*(9-1)) + ((0.700^2)*(24-1)) + ((1.264^2)*(20-1)) + ((0.805^2)*(36-1)) + ((0.658^2)*(11-1))
SSR
20.646 + 70.124
(1.986 + 1.292 + 17.368) + 70.124
20.646/5
1.986/1
1.292/2
17.368/6
70.124/109
4.1282/70.124
1.986/70.124
0.646/70.124
2.985/70.124
0.6433/70.124
20.646/5
1.986/1
1.292/2
17.368/2
70.124/109
4.1282/70.124
1.986/70.124
0.646/70.124
8.684/70.124
0.6433/70.124
4.1282/70.124
1.986/70.124
0.646/70.124
8.684/70.124
0.6433/70.124
qf(0.05, 5, 109, lower.tail = FALSE)  #omnibus
qf(0.05, 1, 109, lower.tail = FALSE)  #Dept main effect
qf(0.05, 2, 109, lower.tail = FALSE)  #Stage main effect
qf(0.05, 5, 109, lower.tail = FALSE)  #interaction term
qf(0.05, 5, 109, lower.tail = FALSE)  #omnibus
qf(0.05, 1, 109, lower.tail = FALSE)  #Dept main effect
qf(0.05, 2, 109, lower.tail = FALSE)  #Stage main effect
qf(0.05, 2, 109, lower.tail = FALSE)  #interaction term
4.1282/0.643
1.986/0.643
0.646/0.643
8.684/0.643
0.6433/0.643
20.646/5
1.986/1
1.292/2
17.368/2
70.124/106
4.1282/0.662
1.986/0.662
0.646/0.662
8.684/0.662
20.646 + 70.124
(1.986 + 1.292 + 17.368) + 70.124
1.986 + 1.292 + 17.368
big <- readRDS("ReC.rds")
big$Stage <- plyr::mapvalues(big$Year, from = c(2017, 2018, 2019, 2020, 2021), to = c("Stable", "Transition", "Transition", "Resettled", "Resettled"))
str(big$Stage)
big$Stage <- factor(big$Stage, levels = c("Stable", "Transition", "Resettled"))
str(big$Stage)
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
#big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
TwoWay_df <- subset(big, Course == "ANOVA")
TwoWay_df <-(dplyr::select (TwoWay_df, Stage, Dept, TradPed))
df <- na.omit(TwoWay_df)
TwoWay_df <- na.omit(TwoWay_df) #the next operation required non-missing data
TwoWay_df[TwoWay_df$Stage == "Stable" & TwoWay_df$TradPed < 4.3, "Dept"]<- "ORG"
Box2way<- ggpubr::ggboxplot(TwoWay_df, x = "Dept", y = "TradPed", color = "Stage", xlab = "Academic Department",
ylab = "Students' Evaluations of Traditional Pedagogy", add = "jitter",
title = "Course Evaluations as a Function of Department and Stage in Transition")
Box2way
psych::describeBy(TradPed ~ Stage + Dept, mat = TRUE, data = TwoWay_df, digits = 3, type = 1)
TwoWay_TradPed <- aov(TradPed ~ Stage * Dept, TwoWay_df)
summary(TwoWay_TradPed)
resid_TradPed <- residuals(TwoWay_TradPed)
shapiro.test(resid_TradPed)
hist(resid_TradPed)
qqnorm(resid_TradPed)
library(tidyverse)
TwoWay_df %>%
rstatix::identify_outliers(TradPed)
rstatix::levene_test(TwoWay_df, TradPed ~ Dept * Stage)
omnibus2w <- rstatix::anova_test(TwoWay_df, TradPed ~ Dept * Stage, type = "2", detailed = TRUE)
omnibus2w
TwoWay_df %>%
dplyr::group_by(Dept)%>%
rstatix::anova_test(TradPed ~ Stage)
pwTRwiDP <- TwoWay_df %>%
dplyr::group_by(Dept) %>%
rstatix::emmeans_test(TradPed ~ Stage, p.adjust.method = "holm")
pwTRwiDP
apaTables::apa.2way.table(Dept, Stage, TradPed, data = TwoWay_df, filename = "2Way.doc", table.number = 1, show.marginal.means = TRUE, landscape = TRUE)
pwTRwiDP <- pwTRwiDP %>%
rstatix::add_xy_position(x = "Dept")  #x should be whatever the variable was used in the group_by argument
Box2way <- Box2way + ggpubr::stat_pvalue_manual(pwTRwiDP, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
Box2way
effectsize::eta2_to_f(0.042) #FactorA -- Dept
effectsize::eta2_to_f(0.064) #Factor B -- Stage
effectsize::eta2_to_f(0.013) #interaction
12+24+36+9+20+11
(12+24+36+9+20+11)/3
(12+24+36+9+20+11)/2
pwr2::pwr.2way(a = 2, b = 3, alpha = 0.05, size.A = 37, size.B = 56, f.A = 0.042, f.B = 0.063)
pwr2::ss.2way(a = 2, b = 3, alpha = 0.05, beta = 0.8, f.A = 0.042, f.B = 0.063, B = 100)
psych::describe(TwoWay_df)
TwoWay_df <- TwoWay_df %>%
dplyr::mutate(m_dev = TradPed - 4.06)
head(TwoWay_df)
TwoWay_df <- TwoWay_df %>%
mutate(m_devSQ = m_dev^2)
head(TwoWay_df)
SST <- sum(TwoWay_df$m_devSQ, na.rm=TRUE)
SST
SSM <- 12 * (4.817 - 4.06)^2 + 9 * (3.889 - 4.06)^2 + 24 * (4.317 - 4.06)^2 +
20 * (3.720 - 4.06)^2 + 36 * (3.836 - 4.06)^2 + 11 * (4.145 - 4.06)^2
SSM
SSM_dept <- 72 * (4.160 - 4.06)^2 + 40 * (3.875 - 4.06)^2
SSM_dept
SSM_stage <- 21 * (4.419 - 4.06)^2 + 44 * (4.045 - 4.06)^2 + 47 * (3.909 - 4.06)^2
SSM_stage
SSM_int <- 12.923 - (2.089 + 3.788)
SSM_int
SSR <- ((0.217^2)*(12-1))+ ((0.348^2)*(9-1)) + ((0.700^2)*(24-1)) + ((1.264^2)*(20-1)) + ((0.805^2)*(36-1)) + ((0.658^2)*(11-1))
SSR
12.923 + 70.124
(2.089 + 3.788 + 7.046) + 70.124
2.089 + 3.788 + 7.046
12.923/5
2.089/1
3.788/2
7.046/2
70.124/106
2.585/0.662
2.089/0.662
1.894/0.662
3.523/0.662
qf(0.05, 5, 106, lower.tail = FALSE)  #omnibus
qf(0.05, 1, 106, lower.tail = FALSE)  #Dept main effect
qf(0.05, 2, 106, lower.tail = FALSE)  #Stage main effect
qf(0.05, 2, 106, lower.tail = FALSE)  #interaction term
SSM_int <- 12.923 - (2.089 + 3.788)
SSM_int
12.923/5
2.5846/.662
2.089/.662
3.788/2
1.894/.662
7.047/2
3.523/.662
2.089/83.033 #eta squared for department main effect
3.788/80.033 #eta squared for stage main effect
7.046/80.033 #eta squared for interaction effect
You may notice that the results from the hand calculation are slightly different from the results I will obtain with the R packages. This is because the formula we have used for the hand-calculations utilizes an  approach to calculating the sums of squares that presumes that we have a balanced design (i.e., that the cell sizes are equal). When cell sizes are unequal (i.e., an unbalanced design) the Type II package in *rstatix::anova_test* will produce different result.
big <- readRDS("ReC.rds")
rm1w_df <- (dplyr::select (big, StndtID, Course, TradPed))
View(big)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
View(rm1w_df)
str(rm1w_df)
rm1w_df$Course <- factor(rm1w_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(rm1w_df)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w)df
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w_df)
str(rm1w_df)
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = StndtID ~ Course,
value.var = "TradPed")
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = deID ~ Course,
value.var = "TradPed")
str(rm1wWIDE_df)
head(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("StndtID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
headrm1wLONG_df
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df
rm1wLONG_df <- (data.table::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df)
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp
psych::describeBy(TradPed ~ Course, mat = TRUE, type = 1, data = rm1wLONG_df)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
RMres
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
RMres_TradPed
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
summary(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres)TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed))
citr:::insert_citation()
ggpubr::ggqqplot(residuals(RMres_TradPed))
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = Wave,
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = Course,
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings")
bxp
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
library(tidyverse)
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
rmAOV <- rstatix::anova_test(data = RM1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV <- rstatix::anova_test(data = rm1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV
pwc <- Amodeo_long %>%
rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "none")
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "none", data = rm1wLONG_df)
pwc
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "bonf", data = rm1wLONG_df)
pwc
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings", title = "Course Evaluations across Doctoral Statistics Courses")
bxp
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
box <- box + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif",
tip.length = 0.02, hide.ns = TRUE, step.increase = 0.05)
box
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
box <- box + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif",
tip.length = 0.02, hide.ns = TRUE, step.increase = 0.05)
box
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- box + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE)
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE)
bxp
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
#big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w_df)
str(rm1w_df)
rm1w_df$Course <- factor(rm1w_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(rm1w_df)
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = deID ~ Course,
value.var = "TradPed")
str(rm1wWIDE_df)
head(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df)
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings", title = "Course Evaluations across Doctoral Statistics Courses")
bxp
psych::describeBy(TradPed ~ Course, mat = TRUE, type = 1, data = rm1wLONG_df)
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
summary(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed))
ggpubr::ggqqplot(residuals(RMres_TradPed))
library(tidyverse)
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
rmAOV <- rstatix::anova_test(data = rm1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "bonf", data = rm1wLONG_df)
pwc
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE)
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.5))
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.5))
bxp
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.5))
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
bxp
big <- readRDS("ReC.rds")
#Creates a list of the variables that belong to that scale
TradPed_vars <- c('ClearResponsibilities', 'EffectiveAnswers','Feedback', 'ClearOrganization','ClearPresentation')
#Calculates a mean if at least 75% of the items are non-missing; adjusts the calculating when there is missingness
big$TradPed <- sjstats::mean_n(big[, TradPed_vars], .75)
#if the scoring script won't run, try this one:
#big$TradPed <- sjstats::mean_n(big[, ..TradPed_vars], .75)
rm1w_df <- (dplyr::select (big, deID, Course, TradPed))
head(rm1w_df)
str(rm1w_df)
rm1w_df$Course <- factor(rm1w_df$Course, levels = c("ANOVA", "Multivariate", "Psychometrics"))
str(rm1w_df)
rm1wWIDE_df <- reshape2::dcast(data = rm1w_df, formula = deID ~ Course,
value.var = "TradPed")
str(rm1wWIDE_df)
head(rm1wWIDE_df)
rm1wWIDE_df <- na.omit(rm1wWIDE_df)
rm1wLONG_df <- (reshape2::melt(rm1wWIDE_df, id.vars = c("deID"), measure.vars = c("ANOVA", "Multivariate", "Psychometrics")))
#This process  does not preserve the variable names, so we need to rename them
rm1wLONG_df<-  dplyr::rename(rm1wLONG_df, Course = "variable", TradPed = "value")
str(rm1wLONG_df)
head(rm1wLONG_df)
bxp <- ggpubr::ggboxplot(rm1wLONG_df, x = "Course", y = "TradPed", add = "point", color = "Course",
xlab = "Statistics Course", ylab = "Traditional Pedagogy Course Eval Ratings", title = "Course Evaluations across Doctoral Statistics Courses")
bxp
psych::describeBy(TradPed ~ Course, mat = TRUE, type = 1, data = rm1wLONG_df)
#running the model
RMres_TradPed <- lm(TradPed ~ Course, data = rm1wLONG_df)
summary(RMres_TradPed)
rstatix::shapiro_test(residuals(RMres_TradPed))
ggpubr::ggqqplot(residuals(RMres_TradPed))
library(tidyverse)
rm1wLONG_df %>%
group_by(Course)%>%
rstatix::identify_outliers(TradPed)
rmAOV <- rstatix::anova_test(data = rm1wLONG_df, dv = TradPed, wid = deID, within = Course)
rmAOV
pwc <- rstatix::pairwise_t_test(TradPed ~ Course, paired = TRUE, p.adjust.method = "bonf", data = rm1wLONG_df)
pwc
rstatix::shapiro_test(residuals(RMres_TradPed))
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
bxp
library(tidyverse)
pwc <- pwc %>%
rstatix::add_xy_position(x = "Course")
bxp <- bxp + ggpubr::stat_pvalue_manual(pwc, label = "p.adj.signif", tip.length = 0.02, hide.ns = TRUE, y.position = c(5.3))
bxp
effectsize::eta2_to_f(.014)
WebPower::wp.rmanova(n=70, ng=1, nm=3, f = .1192, nscor = .891, alpha = .05, power = NULL, type = 1)
WebPower::wp.rmanova(n=NULL, ng=1, nm=3, f = .1192, nscor = .891, alpha = .05, power = .80, type = 1)
mean(rm1wLONG_df$TradPed)
rm1wLONG_df$mDev <- rm1wLONG_df$TradPed - 4.319286
View(rm1wLONG_df)
rm1wLONG_df$mDev2 <- rm1wLONG_df$mDev * rm1wLONG_df$mDev
SST <- sum(rm1wLONG_df$mDev2)
SST
psych::describeBy(TradPed ~ Course, data = rm1wLONG_df)
psych::describeBy(TradPed ~ Course, mat=TRUE, type = 1, data = rm1wLONG_df)
psych::describeBy(TradPed ~ deID, mat=TRUE, type = 1, data = rm1wLONG_df)
(0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +   (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +   (0.4618802^2 * (3 - 1)) +   (0.3055050^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.22202022 * (3 - 1)) +  (0.4163332^2 * (3 - 1)) + (0.9018500^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.9451631^2 * (3 - 1)) +
(1.0066446^2 * (3 - 1)) +  (0.1154701^2 * (3 - 1)) +  (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5484828^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.11547012 * (3 - 1)) + (1.6165808^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.6429101^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) +
(0.1154701^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +
(0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) +
(0.2309401^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.0000000	^2 * (3 - 1)) +  (0.2309401^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) +   (0.4000000^2 * (3 - 1)) + (0.34641022 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503	^2 * (3 - 1)) +
(0.0000000^2 * (3 - 1)) + (0.2000000	^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +
(0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1))
(0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +   (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +   (0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.2220202^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.9018500^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.9451631^2 * (3 - 1)) +
(1.0066446^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5484828^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (1.6165808^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.6429101^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) +
(0.1154701^2 * (3 - 1)) + (0.9165151^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) +
(0.5291503^2 * (3 - 1)) + (0.5291503^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) +
(0.2309401^2 * (3 - 1)) + (0.2309401^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.1154701^2 * (3 - 1)) + (0.5033223^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.0000000^2 * (3 - 1)) +  (0.2309401^2 * (3 - 1)) + (0.4618802^2 * (3 - 1)) + (0.4163332^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) +   (0.4000000^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) + (0.8326664^2 * (3 - 1)) + (0.5773503^2 * (3 - 1)) +
(0.0000000^2 * (3 - 1)) + (0.2000000^2 * (3 - 1)) + (0.3055050^2 * (3 - 1)) + (0.3464102^2 * (3 - 1)) +
(0.4618802^2 * (3 - 1)) + (0.3055050^2 * (3 - 1))
psych::describeBy(TradPed ~ Course, mat = TRUE, digits = 3, type = 1, data = rm1wLONG_df)
(70 * (4.211 - 4.319286)^2) + (70 * (4.332 - 4.319286)^2) + (70 * (4.414 - 4.319286)^2)
SSR
SSR <- 34.255 - 1.460
SSR
SSB <- 103.9144 - 34.255
SSB
(70*3) - 1
1.4601/2
1.4601/2#MSM
32.795/65#MSR
.7301/.5045
View(rm1wWIDE_df)
#calculating degrees of freedom for the residual
67-2
1.4601/2#MSM
32.795/65#MSR
.7301/.5045
.7301/.5045
qf(.05, 2, 65)
qf(.05, 2, 65, lower.tail = FALSE)
